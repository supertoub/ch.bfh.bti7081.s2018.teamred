package UserInterface;

import Business.Challenge;
import Business.LevelState;
import Business.ChallengeState;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.icons.VaadinIcons;
import com.vaadin.navigator.View;
import com.vaadin.ui.*;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Button;


import java.util.ArrayList;
import java.util.List;


public class ChallengeBoardView extends ChallengeBoardViewPage implements View {

   // private List<ChallengeBoardViewListener> listeners;
/*
    public ChallengeBoardView() {
        this.listeners = new ArrayList<>();
        this.getBack().addClickListener(this::buttonClick);
        this.getNewChall().addClickListener(this::buttonClick);
        this.getAddLevelButton().addClickListener(this::buttonClick);
    }

    public void addListener(ChallengeBoardViewListener listener) {
        this.listeners.add(listener);
    }

    public void buttonClick(Button.ClickEvent event) {
        for (ChallengeBoardViewListener listener: this.listeners)
            listener.buttonClick(event.getButton());
    }
*/
/*
    public void clearLevels(){
        for (int i = this.getChallBoaLevelLayout().getComponentCount() - 1; i >= 0; i--){
            Component comp = this.getChallBoaLevelLayout().getComponent(i);
            if (comp.getId().equals("level")) {
                this.getChallBoaLevelLayout().removeComponent(comp);
            }
        }
    }
/*
    public void setLevelInfoLabel(int closedCount, int neededToBeClosed, int allCount){
        Label newLabel = null;
        for (int i = this.getChallBoaLevelLayout().getComponentCount() - 1; i >= 0; i--) {
            Component comp = this.getChallBoaLevelLayout().getComponent(i);
            if (comp.getId().equals("lvlInfoLbl")){
                newLabel = (Label) comp;
            }
        }

        String labelText = closedCount + " von " + neededToBeClosed + ", Gesammt: " + allCount;

        if (newLabel == null){
            newLabel = new Label("");
            newLabel.setId("lvlInfoLbl");
        }

        newLabel.setValue(labelText);
        this.getChallBoaLevelLayout().addComponent(newLabel, 1);
    }
/*
    public void addLevel(String levelLabel, LevelState state) {
        Button level = new Button(levelLabel, this::buttonClick);
        level.setId("level");
        level.setWidth("100%");

        if (state == LevelState.closed) {
            level.setIcon(VaadinIcons.LOCK);
            level.setEnabled(false);
        }
        else{
            level.setIcon(VaadinIcons.UNLOCK);
        }

        // Getting index for new element
        int compCount = this.getChallBoaLevelLayout().getComponentCount() - 1;
        this.getChallBoaLevelLayout().addComponent(level, compCount);
    }

    //void buttonClick(Button.ClickEvent event){

    }
/*
    public void addChallenge(String title, String desc, ChallengeState challengeState, int levelOfAnxiety) {
        Panel challenge = new Panel(title);
        final VerticalLayout contentLayout = new VerticalLayout();
        contentLayout.addComponent(new Label(desc));
        challenge.setContent(contentLayout);
        challenge.setHeight("100%");
        challenge.setWidth("100%");


        if (challengeState == challengeState.closed){
            this.getChallBoaChallPassiveLayout().addComponent(challenge);
            challenge.setEnabled(true);
            challenge.addStyleName("captionPassive");
            Button reOpen = new Button("reopen",this::buttonClick);
            reOpen.setId("reOpen");
            contentLayout.addComponent(reOpen);
            Button details = new Button("Details",this::buttonClick);
        }

        if (challengeState == challengeState.open){
            this.getChallBoaChallActiveLayout().addComponent(challenge);
            challenge.setEnabled(true);
            challenge.addStyleName("captionActive");
            Button close = new Button("close",this::buttonClick);
            close.setId("close");
            contentLayout.addComponent(close);
            Button details = new Button("Details",this::buttonClick);
            details.setId("details");
            contentLayout.addComponent(details);

        }
    }
/*
    public void addChallengeDetails(Challenge challenge) {
        this.getDetails().setWidth("100%");
        final VerticalLayout content = new VerticalLayout();
        content.setWidth("100%");
        this.getDetails().setContent(content);
        this.getChallBoaChallDetailLayout().addComponent(this.getDetails());
        content.addComponent(new Label(challenge.getTitle().toUpperCase()));
        //content.addComponent(new Label(challenge.getDesc(), ContentMode.TEXT));
        content.addComponent(new Label(challenge.getChallengeState().toString()));
        String levelAnx = Integer.toString(challenge.getLevelOfAnxiety());
        content.addComponent(new Label("Level of Anxiety: "+levelAnx));
        Label Description = new Label(challenge.getDesc());
        Description.setWidth("100%");
        //Description.setHeight("100%");
        content.addComponent(Description);
        //content.setExpandRatio(Description,2);
        this.getDetails().setDescription("Challenge Details");

    }
/*
    public void removeChallengeDetails(){
        this.getChallBoaChallDetailLayout().removeComponent(this.getDetails());
    }
/*
    public void removeChallenges(){
        this.getChallBoaChallActiveLayout().removeAllComponents();
        this.getChallBoaChallActiveLayout().addComponent(this.getChallBoaActiveLabel());
        this.getChallBoaChallActiveLayout().setComponentAlignment(this.getChallBoaActiveLabel(),Alignment.TOP_CENTER);
        this.getChallBoaChallPassiveLayout().removeAllComponents();
        this.getChallBoaChallPassiveLayout().addComponent(this.getChallBoaPassivLabel());
        this.getChallBoaChallPassiveLayout().setComponentAlignment(getChallBoaPassivLabel(),Alignment.TOP_CENTER);
    }

 */
}